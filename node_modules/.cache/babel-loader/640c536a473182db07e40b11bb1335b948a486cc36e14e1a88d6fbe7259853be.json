{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import'./AdminOrders.css';// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminOrders(){const[orders,setOrders]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{const token=localStorage.getItem('token');const isAdminValue=localStorage.getItem('isAdmin')==='true';if(!token){navigate('/login');return;}if(!isAdminValue){navigate('/');return;}fetch('http://localhost:5002/api/admin/orders',{method:'GET',headers:{'Authorization':`Bearer ${token}`// Send the token in the Authorization header\n}}).then(response=>{if(response.ok){return response.json();}else if(response.status===403){navigate('/');}else{throw new Error('Failed to fetch orders.');}}).then(data=>{setOrders(data);// Store the orders in state\n}).catch(err=>{console.error('Error fetching orders:',err);setError(err.message);}).finally(()=>{setLoading(false);// Set loading to false when the request is complete\n});},[navigate]);const handleStatusChange=async(orderId,newStatus)=>{const token=localStorage.getItem('token');// Get token for authentication\ntry{const response=await fetch(`http://localhost:5002/api/admin/orders/${orderId}`,{method:'PUT',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`// Send the token in the Authorization header\n},body:JSON.stringify({status:newStatus})// Send the new status to the server\n});if(response.ok){const updatedOrder=await response.json();// Update the order in the state with the new status\nsetOrders(prevOrders=>prevOrders.map(order=>order._id===updatedOrder.order._id?updatedOrder.order:order));}else{throw new Error('Failed to update order status.');}}catch(err){console.error('Error updating order status:',err);setError(err.message);// Handle any errors\n}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-orders-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Orders\"}),orders.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No orders found.\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"admin-orders-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Order ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Change Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created At\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Shipping Address\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(order=>{var _order$user;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:((_order$user=order.user)===null||_order$user===void 0?void 0:_order$user.username)||'Unknown'}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",order.totalAmount]}),/*#__PURE__*/_jsx(\"td\",{children:order.status}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:order.status,onChange:e=>handleStatusChange(order._id,e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Completed\",children:\"Completed\"})]})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(order.createdAt).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:order.shippingAddress})]},order._id);})})]})]});}export default AdminOrders;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminOrders","orders","setOrders","loading","setLoading","error","setError","navigate","token","localStorage","getItem","isAdminValue","fetch","method","headers","then","response","ok","json","status","Error","data","catch","err","console","message","finally","handleStatusChange","orderId","newStatus","body","JSON","stringify","updatedOrder","prevOrders","map","order","_id","children","className","length","_order$user","user","username","totalAmount","value","onChange","e","target","Date","createdAt","toLocaleDateString","shippingAddress"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AdminOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminOrders.css'; // Import the CSS file\n\nfunction AdminOrders() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const isAdminValue = localStorage.getItem('isAdmin') === 'true';\n\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    if (!isAdminValue) {\n      navigate('/');\n      return;\n    }\n\n    fetch('http://localhost:5002/api/admin/orders', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`, // Send the token in the Authorization header\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else if (response.status === 403) {\n          navigate('/');\n        } else {\n          throw new Error('Failed to fetch orders.');\n        }\n      })\n      .then((data) => {\n        setOrders(data); // Store the orders in state\n      })\n      .catch((err) => {\n        console.error('Error fetching orders:', err);\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false); // Set loading to false when the request is complete\n      });\n  }, [navigate]);\n\n  const handleStatusChange = async (orderId, newStatus) => {\n    const token = localStorage.getItem('token'); // Get token for authentication\n\n    try {\n      const response = await fetch(`http://localhost:5002/api/admin/orders/${orderId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`, // Send the token in the Authorization header\n        },\n        body: JSON.stringify({ status: newStatus }), // Send the new status to the server\n      });\n\n      if (response.ok) {\n        const updatedOrder = await response.json();\n        // Update the order in the state with the new status\n        setOrders((prevOrders) =>\n          prevOrders.map((order) =>\n            order._id === updatedOrder.order._id ? updatedOrder.order : order\n          )\n        );\n      } else {\n        throw new Error('Failed to update order status.');\n      }\n    } catch (err) {\n      console.error('Error updating order status:', err);\n      setError(err.message); // Handle any errors\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"admin-orders-container\">\n      <h1>Admin Orders</h1>\n      {orders.length === 0 ? (\n        <p>No orders found.</p>\n      ) : (\n        <table className=\"admin-orders-table\">\n          <thead>\n            <tr>\n              <th>Order ID</th>\n              <th>User</th>\n              <th>Total Amount</th>\n              <th>Status</th>\n              <th>Change Status</th>\n              <th>Created At</th>\n              <th>Shipping Address</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user?.username || 'Unknown'}</td>\n                <td>${order.totalAmount}</td>\n                <td>{order.status}</td>\n                <td>\n                  <select\n                    value={order.status}\n                    onChange={(e) => handleStatusChange(order._id, e.target.value)}\n                  >\n                    <option value=\"Pending\">Pending</option>\n                    <option value=\"Completed\">Completed</option>\n                  </select>\n                </td>\n                <td>{new Date(order.createdAt).toLocaleDateString()}</td>\n                <td>{order.shippingAddress}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default AdminOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}