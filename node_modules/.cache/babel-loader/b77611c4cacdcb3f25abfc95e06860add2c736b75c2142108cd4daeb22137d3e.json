{"ast":null,"code":"var _jsxFileName = \"/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AccountPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountPage() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId'); // Get logged-in user's ID\n  const token = localStorage.getItem('token'); // Check for login status\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token\n    } else {\n      fetchOrders();\n    }\n  }, [userId, token, navigate]);\n\n  // Fetch user orders\n  const fetchOrders = async () => {\n    try {\n      const response = await fetch(`http://localhost:5002/api/user/${userId}/orders`, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Add token for authorization\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      setOrders(data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Clear token from localStorage\n    localStorage.removeItem('userId'); // Clear userId from localStorage\n    navigate('/login'); // Redirect to login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => navigate(`/order/${order._id}`),\n          className: \"order-link\",\n          children: [\"Order #\", order._id, \" - \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, order._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-button\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountPage, \"DKh9oAJOiiRdCJcoBbbW2uCaxSU=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AccountPage","_s","orders","setOrders","navigate","userId","localStorage","getItem","token","fetchOrders","response","fetch","headers","ok","Error","data","json","error","console","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","onClick","_id","status","_c","$RefreshReg$"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AccountPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AccountPage.css';\n\nfunction AccountPage() {\n  const [orders, setOrders] = useState([]);\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId');  // Get logged-in user's ID\n  const token = localStorage.getItem('token');    // Check for login status\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');  // Redirect to login if no token\n    } else {\n      fetchOrders();\n    }\n  }, [userId, token, navigate]);\n\n  // Fetch user orders\n  const fetchOrders = async () => {\n    try {\n      const response = await fetch(`http://localhost:5002/api/user/${userId}/orders`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,  // Add token for authorization\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      setOrders(data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');    // Clear token from localStorage\n    localStorage.removeItem('userId');   // Clear userId from localStorage\n    navigate('/login');                  // Redirect to login\n  };\n\n  return (\n    <div className=\"account-container\">\n      <h2>Your Orders</h2>\n      <ul>\n        {orders.map(order => (\n          <li key={order._id}>\n            <div onClick={() => navigate(`/order/${order._id}`)} className=\"order-link\">\n              Order #{order._id} - {order.status}\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {/* Logout button */}\n      <button onClick={handleLogout} className=\"logout-button\">\n        Logout\n      </button>\n    </div>\n  );\n}\n\nexport default AccountPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}