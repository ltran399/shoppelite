{"ast":null,"code":"var _jsxFileName = \"/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\n// src/components/ReviewForm.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewForm({\n  productId\n}) {\n  _s();\n  const [reviewText, setReviewText] = useState('');\n  const [rating, setRating] = useState(5);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5002/api/review', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: localStorage.getItem('userId'),\n          // Assuming you store the logged-in user's ID in localStorage\n          productId,\n          reviewText,\n          rating\n        })\n      });\n      if (response.ok) {\n        alert('Review submitted successfully!');\n        setReviewText('');\n        setRating(5);\n      } else {\n        const data = await response.json();\n        alert(data.error || 'Failed to submit review.');\n      }\n    } catch (err) {\n      console.error('Error submitting review:', err);\n      alert('Failed to submit review.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Write a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: reviewText,\n      onChange: e => setReviewText(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rating,\n        onChange: e => setRating(Number(e.target.value)),\n        children: [1, 2, 3, 4, 5].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"XCexdDWeTme2CfdqFLZ2Y2KHkeM=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReviewForm","productId","_s","reviewText","setReviewText","rating","setRating","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","userId","localStorage","getItem","ok","alert","data","json","error","err","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","required","Number","map","num","type","_c","$RefreshReg$"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/ReviewForm.js"],"sourcesContent":["// src/components/ReviewForm.js\n\nimport React, { useState } from 'react';\n\nfunction ReviewForm({ productId }) {\n  const [reviewText, setReviewText] = useState('');\n  const [rating, setRating] = useState(5);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5002/api/review', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          userId: localStorage.getItem('userId'),  // Assuming you store the logged-in user's ID in localStorage\n          productId,\n          reviewText,\n          rating,\n        }),\n      });\n\n      if (response.ok) {\n        alert('Review submitted successfully!');\n        setReviewText('');\n        setRating(5);\n      } else {\n        const data = await response.json();\n        alert(data.error || 'Failed to submit review.');\n      }\n    } catch (err) {\n      console.error('Error submitting review:', err);\n      alert('Failed to submit review.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Write a Review</h3>\n      <textarea\n        value={reviewText}\n        onChange={(e) => setReviewText(e.target.value)}\n        required\n      />\n      <label>\n        Rating:\n        <select value={rating} onChange={(e) => setRating(Number(e.target.value))}>\n          {[1, 2, 3, 4, 5].map(num => (\n            <option key={num} value={num}>{num}</option>\n          ))}\n        </select>\n      </label>\n      <button type=\"submit\">Submit Review</button>\n    </form>\n  );\n}\n\nexport default ReviewForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}