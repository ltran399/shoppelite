{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./AdminReviews.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminReviews(){const[reviews,setReviews]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const token=localStorage.getItem('token');fetch('http://localhost:5002/api/admin/reviews',{method:'GET',headers:{'Authorization':`Bearer ${token}`}}).then(response=>response.json()).then(async data=>{const reviewsWithScores=await Promise.all(data.map(async review=>{const relevanceScore=await fetchRelevanceScore(review.reviewText);return{...review,relevanceScore};}));setReviews(reviewsWithScores);setLoading(false);}).catch(err=>{console.error('Error fetching reviews:',err);setError(err.message);setLoading(false);});},[]);const fetchRelevanceScore=async reviewText=>{try{const response=await fetch('http://localhost:5002/api/relevance-score',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({reviewText})});if(!response.ok){throw new Error(`API request failed with status ${response.status}`);}const data=await response.json();return data.relevanceScore;}catch(err){console.error('Error fetching relevance score:',err.message);return'N/A';}};const handleDeleteReview=async reviewId=>{const token=localStorage.getItem('token');try{const response=await fetch(`http://localhost:5002/api/admin/reviews/${reviewId}`,{method:'DELETE',headers:{'Authorization':`Bearer ${token}`}});if(response.ok){setReviews(reviews.filter(review=>review._id!==reviewId));alert('Review deleted successfully.');}else{alert('Failed to delete review.');}}catch(err){console.error('Error deleting review:',err);alert('Failed to delete review.');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-reviews-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Reviews\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"admin-reviews-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"User ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Order ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Review Text\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Rating\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created At\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Relevance Score\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reviews.map(review=>{var _review$user,_review$user2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:((_review$user=review.user)===null||_review$user===void 0?void 0:_review$user.username)||((_review$user2=review.user)===null||_review$user2===void 0?void 0:_review$user2.email)||'Unknown User'}),/*#__PURE__*/_jsx(\"td\",{children:review.orderId}),/*#__PURE__*/_jsx(\"td\",{children:review.productId}),/*#__PURE__*/_jsx(\"td\",{children:review.reviewText}),/*#__PURE__*/_jsx(\"td\",{children:review.rating}),/*#__PURE__*/_jsx(\"td\",{children:new Date(review.createdAt).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:review.relevanceScore}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>handleDeleteReview(review._id),children:\"Delete\"})})]},review._id);})})]})]});}export default AdminReviews;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AdminReviews","reviews","setReviews","loading","setLoading","error","setError","token","localStorage","getItem","fetch","method","headers","then","response","json","data","reviewsWithScores","Promise","all","map","review","relevanceScore","fetchRelevanceScore","reviewText","catch","err","console","message","body","JSON","stringify","ok","Error","status","handleDeleteReview","reviewId","filter","_id","alert","children","className","_review$user","_review$user2","user","username","email","orderId","productId","rating","Date","createdAt","toLocaleDateString","onClick"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AdminReviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminReviews.css';\n\nfunction AdminReviews() {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    fetch('http://localhost:5002/api/admin/reviews', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then(async (data) => {\n        const reviewsWithScores = await Promise.all(\n          data.map(async (review) => {\n            const relevanceScore = await fetchRelevanceScore(review.reviewText);\n            return { ...review, relevanceScore };\n          })\n        );\n        setReviews(reviewsWithScores);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error('Error fetching reviews:', err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  const fetchRelevanceScore = async (reviewText) => {\n    try {\n      const response = await fetch('http://localhost:5002/api/relevance-score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ reviewText }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n  \n      const data = await response.json();\n      return data.relevanceScore;\n    } catch (err) {\n      console.error('Error fetching relevance score:', err.message);\n      return 'N/A';\n    }\n  };\n  \n  \n\n  const handleDeleteReview = async (reviewId) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`http://localhost:5002/api/admin/reviews/${reviewId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        setReviews(reviews.filter((review) => review._id !== reviewId));\n        alert('Review deleted successfully.');\n      } else {\n        alert('Failed to delete review.');\n      }\n    } catch (err) {\n      console.error('Error deleting review:', err);\n      alert('Failed to delete review.');\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"admin-reviews-container\">\n      <h1>Manage Reviews</h1>\n      <table className=\"admin-reviews-table\">\n        <thead>\n          <tr>\n            <th>User ID</th>\n            <th>Order ID</th>\n            <th>Product ID</th>\n            <th>Review Text</th>\n            <th>Rating</th>\n            <th>Created At</th>\n            <th>Relevance Score</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reviews.map((review) => (\n            <tr key={review._id}>\n              <td>{review.user?.username || review.user?.email || 'Unknown User'}</td>\n              <td>{review.orderId}</td>\n              <td>{review.productId}</td>\n              <td>{review.reviewText}</td>\n              <td>{review.rating}</td>\n              <td>{new Date(review.createdAt).toLocaleDateString()}</td>\n              <td>{review.relevanceScore}</td>\n              <td>\n                <button\n                  className=\"delete-button\"\n                  onClick={() => handleDeleteReview(review._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AdminReviews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}