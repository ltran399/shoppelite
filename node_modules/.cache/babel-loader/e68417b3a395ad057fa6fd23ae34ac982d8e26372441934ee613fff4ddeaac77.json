{"ast":null,"code":"var _jsxFileName = \"/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get the token from localStorage\n\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token is found\n      return;\n    }\n\n    // Check if the user is an admin\n    fetch('http://localhost:5002/api/admin/check', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}` // Send the token in the Authorization header\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else if (response.status === 403) {\n        navigate('/'); // Redirect non-admins to the homepage\n      } else {\n        throw new Error('Failed to verify admin status.');\n      }\n    }).then(data => {\n      if (data.isAdmin) {\n        setIsAdmin(true); // Grant access to the admin dashboard\n      } else {\n        navigate('/'); // Redirect non-admins to the homepage\n      }\n    }).catch(() => {\n      navigate('/login'); // Redirect to login on error\n    }).finally(() => {\n      setLoading(false); // Stop loading after the check\n    });\n  }, [navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this); // Show a loading state while checking admin status\n  }\n  if (!isAdmin) {\n    return null; // Do not render the page if the user is not an admin\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/orders\",\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/reviews\",\n        children: \"Manage Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"QH2ITqyHImXRXjZO7HAHA0Yl0h8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","isAdmin","setIsAdmin","loading","setLoading","token","localStorage","getItem","fetch","method","headers","then","response","ok","json","status","Error","data","catch","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get the token from localStorage\n\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token is found\n      return;\n    }\n\n    // Check if the user is an admin\n    fetch('http://localhost:5002/api/admin/check', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`, // Send the token in the Authorization header\n      },\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else if (response.status === 403) {\n          navigate('/'); // Redirect non-admins to the homepage\n        } else {\n          throw new Error('Failed to verify admin status.');\n        }\n      })\n      .then(data => {\n        if (data.isAdmin) {\n          setIsAdmin(true); // Grant access to the admin dashboard\n        } else {\n          navigate('/'); // Redirect non-admins to the homepage\n        }\n      })\n      .catch(() => {\n        navigate('/login'); // Redirect to login on error\n      })\n      .finally(() => {\n        setLoading(false); // Stop loading after the check\n      });\n  }, [navigate]);\n\n  if (loading) {\n    return <div>Loading...</div>; // Show a loading state while checking admin status\n  }\n\n  if (!isAdmin) {\n    return null; // Do not render the page if the user is not an admin\n  }\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <nav>\n        <Link to=\"/admin/orders\">Manage Orders</Link>\n        <br />\n        <Link to=\"/admin/reviews\">Manage Reviews</Link>\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}