{"ast":null,"code":"var _jsxFileName = \"/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/Confirmation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Confirmation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Confirmation({\n  cartItems = []\n}) {\n  _s();\n  // Set a default empty array for cartItems\n  const userId = localStorage.getItem('userId'); // Get userId from localStorage\n  const token = localStorage.getItem('token'); // Get token for authorization\n  const navigate = useNavigate();\n\n  // Function to post order data\n  const postOrder = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/place-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Pass token for authorization\n        },\n        body: JSON.stringify({\n          userId,\n          // Post userId\n          items: cartItems,\n          // Post the items in the cart\n          status: 'Pending'\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Order placed successfully:', data);\n      } else {\n        console.error('Failed to place order:', data);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n    }\n  };\n\n  // Post the order when the component mounts\n  useEffect(() => {\n    if (!userId || cartItems.length === 0) {\n      // Add condition to check if cartItems exists\n      navigate('/cart'); // Redirect to cart if there's no userId or no items\n    } else {\n      postOrder(); // Post the order\n    }\n  }, [userId, cartItems, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirmation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Congratulations, your order is placed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for shopping with us.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Confirmation, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Confirmation;\nexport default Confirmation;\nvar _c;\n$RefreshReg$(_c, \"Confirmation\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","Confirmation","cartItems","_s","userId","localStorage","getItem","token","navigate","postOrder","response","fetch","method","headers","body","JSON","stringify","items","status","data","json","ok","console","log","error","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/Confirmation.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Confirmation.css';\n\nfunction Confirmation({ cartItems = [] }) { // Set a default empty array for cartItems\n  const userId = localStorage.getItem('userId'); // Get userId from localStorage\n  const token = localStorage.getItem('token'); // Get token for authorization\n  const navigate = useNavigate();\n\n  // Function to post order data\n  const postOrder = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/place-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,  // Pass token for authorization\n        },\n        body: JSON.stringify({\n          userId, // Post userId\n          items: cartItems, // Post the items in the cart\n          status: 'Pending',\n        }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Order placed successfully:', data);\n      } else {\n        console.error('Failed to place order:', data);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n    }\n  };\n\n  // Post the order when the component mounts\n  useEffect(() => {\n    if (!userId || cartItems.length === 0) { // Add condition to check if cartItems exists\n      navigate('/cart'); // Redirect to cart if there's no userId or no items\n    } else {\n      postOrder(); // Post the order\n    }\n  }, [userId, cartItems, navigate]);\n\n  return (\n    <div className=\"confirmation-container\">\n      <h1>Congratulations, your order is placed!</h1>\n      <p>Thank you for shopping with us.</p>\n    </div>\n  );\n}\n\nexport default Confirmation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAC;EAAEC,SAAS,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAAE;EAC1C,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,MAAME,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK,EAAE,CAAG;QACvC,CAAC;QACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBZ,MAAM;UAAE;UACRa,KAAK,EAAEf,SAAS;UAAE;UAClBgB,MAAM,EAAE;QACV,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAIV,QAAQ,CAACW,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,IAAI,CAAC;MACjD,CAAC,MAAM;QACLG,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEL,IAAI,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,MAAM,IAAIF,SAAS,CAACuB,MAAM,KAAK,CAAC,EAAE;MAAE;MACvCjB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLC,SAAS,CAAC,CAAC,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACL,MAAM,EAAEF,SAAS,EAAEM,QAAQ,CAAC,CAAC;EAEjC,oBACER,OAAA;IAAK0B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC3B,OAAA;MAAA2B,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C/B,OAAA;MAAA2B,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAAC5B,EAAA,CA/CQF,YAAY;EAAA,QAGFH,WAAW;AAAA;AAAAkC,EAAA,GAHrB/B,YAAY;AAiDrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}