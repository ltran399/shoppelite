{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminDashboard(){const navigate=useNavigate();const[isAdmin,setIsAdmin]=useState(false);// State for admin status\nconst[loading,setLoading]=useState(true);// State for loading\nuseEffect(()=>{const token=localStorage.getItem('token');// Get the token from localStorage\nconst isAdminValue=localStorage.getItem('isAdmin')==='true';// Parse isAdmin as boolean\nif(!token){navigate('/login');// Redirect to login if no token is found\nreturn;}if(!isAdminValue){navigate('/');// Redirect to homepage if not an admin\nreturn;}// Check if the user is still an admin by making a backend request\nfetch('http://localhost:5002/api/admin/check',{method:'GET',headers:{'Authorization':`Bearer ${token}`// Send the token in the Authorization header\n}}).then(response=>{if(response.ok){return response.json();}else if(response.status===403){navigate('/');// Redirect non-admins to the homepage\n}else{throw new Error('Failed to verify admin status.');}}).then(data=>{if(data.message==='You are an admin'){setIsAdmin(true);// Grant access to the admin dashboard\n}else{navigate('/');// Redirect non-admins to the homepage\n}}).catch(()=>{navigate('/login');// Redirect to login on error\n}).finally(()=>{setLoading(false);// Stop loading after the check\n});},[navigate]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Show a loading state while checking admin status\n}if(!isAdmin){return/*#__PURE__*/_jsx(\"div\",{children:\"Access denied. Redirecting...\"});// Optional message before redirection\n}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/orders\",children:\"Manage Orders\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/admin/reviews\",children:\"Manage Reviews\"})]})]});}export default AdminDashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","AdminDashboard","navigate","isAdmin","setIsAdmin","loading","setLoading","token","localStorage","getItem","isAdminValue","fetch","method","headers","then","response","ok","json","status","Error","data","message","catch","finally","children","to"],"sources":["/Users/lamtran/Documents/ShopeeLite/shopeelite/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n  const [isAdmin, setIsAdmin] = useState(false); // State for admin status\n  const [loading, setLoading] = useState(true);  // State for loading\n\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get the token from localStorage\n    const isAdminValue = localStorage.getItem('isAdmin') === 'true'; // Parse isAdmin as boolean\n\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token is found\n      return;\n    }\n\n    if (!isAdminValue) {\n      navigate('/'); // Redirect to homepage if not an admin\n      return;\n    }\n\n    // Check if the user is still an admin by making a backend request\n    fetch('http://localhost:5002/api/admin/check', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`, // Send the token in the Authorization header\n      },\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else if (response.status === 403) {\n          navigate('/'); // Redirect non-admins to the homepage\n        } else {\n          throw new Error('Failed to verify admin status.');\n        }\n      })\n      .then(data => {\n        if (data.message === 'You are an admin') {\n          setIsAdmin(true); // Grant access to the admin dashboard\n        } else {\n          navigate('/'); // Redirect non-admins to the homepage\n        }\n      })\n      .catch(() => {\n        navigate('/login'); // Redirect to login on error\n      })\n      .finally(() => {\n        setLoading(false); // Stop loading after the check\n      });\n  }, [navigate]);\n\n  if (loading) {\n    return <div>Loading...</div>; // Show a loading state while checking admin status\n  }\n\n  if (!isAdmin) {\n    return <div>Access denied. Redirecting...</div>; // Optional message before redirection\n  }\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <nav>\n        <Link to=\"/admin/orders\">Manage Orders</Link>\n        <br />\n        <Link to=\"/admin/reviews\">Manage Reviews</Link>\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAAE;AAC/C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAG;AAE/CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAC7C,KAAM,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAAK,MAAM,CAAE;AAEjE,GAAI,CAACF,KAAK,CAAE,CACVL,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACpB,OACF,CAEA,GAAI,CAACQ,YAAY,CAAE,CACjBR,QAAQ,CAAC,GAAG,CAAC,CAAE;AACf,OACF,CAEA;AACAS,KAAK,CAAC,uCAAuC,CAAE,CAC7CC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,CAAE,UAAUN,KAAK,EAAI;AACtC,CACF,CAAC,CAAC,CACCO,IAAI,CAACC,QAAQ,EAAI,CAChB,GAAIA,QAAQ,CAACC,EAAE,CAAE,CACf,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAAC,CAAC,CACxB,CAAC,IAAM,IAAIF,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAE,CAClChB,QAAQ,CAAC,GAAG,CAAC,CAAE;AACjB,CAAC,IAAM,CACL,KAAM,IAAI,CAAAiB,KAAK,CAAC,gCAAgC,CAAC,CACnD,CACF,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,EAAI,CACZ,GAAIA,IAAI,CAACC,OAAO,GAAK,kBAAkB,CAAE,CACvCjB,UAAU,CAAC,IAAI,CAAC,CAAE;AACpB,CAAC,IAAM,CACLF,QAAQ,CAAC,GAAG,CAAC,CAAE;AACjB,CACF,CAAC,CAAC,CACDoB,KAAK,CAAC,IAAM,CACXpB,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACtB,CAAC,CAAC,CACDqB,OAAO,CAAC,IAAM,CACbjB,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CAAC,CAAC,CACN,CAAC,CAAE,CAACJ,QAAQ,CAAC,CAAC,CAEd,GAAIG,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAA0B,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAChC,CAEA,GAAI,CAACrB,OAAO,CAAE,CACZ,mBAAOL,IAAA,QAAA0B,QAAA,CAAK,+BAA6B,CAAK,CAAC,CAAE;AACnD,CAEA,mBACExB,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBxB,KAAA,QAAAwB,QAAA,eACE1B,IAAA,CAACF,IAAI,EAAC6B,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,eAAa,CAAM,CAAC,cAC7C1B,IAAA,QAAK,CAAC,cACNA,IAAA,CAACF,IAAI,EAAC6B,EAAE,CAAC,gBAAgB,CAAAD,QAAA,CAAC,gBAAc,CAAM,CAAC,EAC5C,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAvB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}